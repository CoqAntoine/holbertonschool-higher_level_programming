>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# 1. List of Lists of integers / div = integer
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [1.5, 2.0]]

# 2. List of Lists of integers / div = string
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# 3. List of Lists of integers / div = 0
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# 4. Not a list of lists of integers / div = integer
>>> matrix = "not a matrix"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# 5. List of lists of integers but not rectangular / div = integer
>>> matrix = [[1, 2], [3, 4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# 6. List of Lists of integers / div = float('inf') => all values == 0.0
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

# 7. List of Lists of integers with one float('inf') / div = integer
>>> matrix = [[1, 2], [3, float('inf')]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [1.5, inf]]

# 8. List of Lists of integers with one float('nan') / div = float('nan')
>>> matrix = [[1, 2], [3, float('nan')]]
>>> matrix_divided(matrix, float('nan'))
[[nan, nan], [nan, nan]]

# 9. Missing one argument
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# 10. Missing two arguments
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
